{"version":3,"sources":["webpack:///src/app/account/account.page.html","webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account.page.scss","webpack:///src/app/account/account.page.ts","webpack:///src/services/user.service.ts"],"names":["routes","path","component","AccountPageRoutingModule","imports","forChild","exports","AccountPageModule","declarations","AccountPage","router","userService","loadingController","isEditEnabled","editButtonTitle","validationMessages","name","email","password","validPassword","phone","documentId","birthday","registerForm","required","presentLoading","getSignedInUser","subscribe","user","dismissLoading","get","setValue","full_name","cedula","error","console","log","create","message","loadingView","present","dismiss","removeUser","navigate","selector","template","UserService","http","post","authInfo","localUser","getUser","params","providedIn"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>Cuenta</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"handleEdit()\\\">{{ editButtonTitle }}</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Cuenta</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <form [formGroup]=\\\"registerForm\\\">\\n    <!-- Name Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nombre y Apellido</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\" [readonly]=\\\"!isEditEnabled\\\" required>\\n      </ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.name\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Document ID Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Cédula</ion-label>\\n      <ion-input type=\\\"number\\\" formControlName=\\\"documentId\\\" [readonly]=\\\"!isEditEnabled\\\" required>\\n      </ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.documentId\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Birthday Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha de Nacimiento</ion-label>\\n      <ion-datetime displayFormat=\\\"MMM DD, YYYY\\\" formControlName=\\\"birthday\\\" value=\\\"1960-03-01\\\"\\n        [readonly]=\\\"!isEditEnabled\\\" required></ion-datetime>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.birthday\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Phone Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Número telefónico</ion-label>\\n      <ion-input type=\\\"tel\\\" formControlName=\\\"phone\\\" [readonly]=\\\"!isEditEnabled\\\" required>\\n      </ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.phone\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Email Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Correo electrónico</ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" [readonly]=\\\"!isEditEnabled\\\" required>\\n      </ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.email\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Password Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Contraseña</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" [readonly]=\\\"!isEditEnabled\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.password\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Password Validation Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Comprobar Contraseña</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"validPassword\\\" [readonly]=\\\"!isEditEnabled\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.validPassword\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Create Account Button -->\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" [disabled]=\\\"!isEditEnabled\\\">Guardar\\n      </ion-button>\\n    </div>\\n  </form>\\n  <div class=\\\"ion-padding\\\">\\n    <ion-button expand=\\\"block\\\" class=\\\"ion-no-margin\\\" color=\\\"light\\\" (click)=\\\"logOut()\\\">Cerrar sesión\\n    </ion-button>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AccountPage } from './account.page';\n\nimport { AccountPageRoutingModule } from './account-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: AccountPage }]),\n    AccountPageRoutingModule,\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWNjb3VudC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { AuthGuard } from 'src/resources/auth-guard';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: 'account.page.html',\n  styleUrls: ['account.page.scss']\n})\nexport class AccountPage implements OnInit {\n\n  private loadingView\n  public isEditEnabled = false;\n  public editButtonTitle = 'Editar';\n  public validationMessages = {\n    name: [],\n    email: [],\n    password: [],\n    validPassword: [],\n    phone: [],\n    documentId: [],\n    birthday: []\n  };\n  public registerForm: FormGroup = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', []),\n    validPassword: new FormControl('', []),\n    phone: new FormControl('', [Validators.required]),\n    documentId: new FormControl('', [Validators.required]),\n    birthday: new FormControl('', [Validators.required])\n  });\n\n  constructor(private router: Router, private userService: UserService, private loadingController: LoadingController) { }\n\n  ngOnInit() {\n    this.presentLoading();\n    this.userService.getSignedInUser().subscribe((user) => {\n      this.dismissLoading();\n      this.registerForm.get('name').setValue(user.full_name);\n      this.registerForm.get('email').setValue(user.email);\n      this.registerForm.get('phone').setValue(user.phone);\n      this.registerForm.get('documentId').setValue(user.cedula);\n    }, error => {\n      this.dismissLoading();\n      console.log(error);\n    })\n  }\n\n  /**\n   * Presenta una vista de carga mientras se envian los datos al servidor.\n   */\n  private async presentLoading() {\n    this.loadingView = await this.loadingController.create({\n      message: 'Cargando'\n    });\n    this.loadingView.present();\n  }\n\n  private dismissLoading() {\n    this.loadingView.dismiss();\n  }\n\n  public logOut() {\n    AuthGuard.removeUser();\n    this.router.navigate(['/login']);\n  }\n\n  public handleEdit() {\n    this.isEditEnabled = !this.isEditEnabled;\n    this.editButtonTitle = this.isEditEnabled ? 'Cancelar' : 'Editar';\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthGuard } from 'src/resources/auth-guard';\nimport { User } from 'src/classes/user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public createUser(user) {\n    return this.http.post<User>('https://community-service-ucab.herokuapp.com/api/users', user);\n  }\n\n  public login(authInfo) {\n    return this.http.post<User>('https://community-service-ucab.herokuapp.com/api/login', authInfo);\n  }\n\n  public getSignedInUser() {\n    const localUser = AuthGuard.getUser();\n    const params = { email: localUser.email };\n    if (localUser !== null) {\n      return this.http.get<User>('https://community-service-ucab.herokuapp.com/api/user', { params });\n    }\n  }\n\n  public getUserByEmail(email) {\n    const params = { email };\n    return this.http.get<User>('https://community-service-ucab.herokuapp.com/api/user', { params });\n  }\n}\n"]}