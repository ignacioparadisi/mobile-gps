{"version":3,"sources":["webpack:///src/app/routes/routes.page.html","webpack:///src/app/routes/routes-routing.module.ts","webpack:///src/app/routes/routes.module.ts","webpack:///src/app/routes/routes.page.scss","webpack:///src/app/routes/routes.page.ts"],"names":["routes","path","component","RoutesPageRoutingModule","imports","forChild","exports","RoutesPageModule","declarations","RoutesPage","router","routeService","alertController","refresh","event","getRoutesForUser","subscribe","response","target","complete","error","presentErrorAlert","create","header","message","buttons","alert","present","index","splice","console","log","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAJnC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEAI,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAT5B,+DAAS;AACRH,eAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,uDAAD;AAPN,OAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFE,UAAU;AAIrB,4BAAoBC,MAApB,EAA4CC,YAA5C,EAAgFC,eAAhF,EAAkH;AAAA;;AAA9F,eAAAF,MAAA,GAAAA,MAAA;AAAwB,eAAAC,YAAA,GAAAA,YAAA;AAAoC,eAAAC,eAAA,GAAAA,eAAA;AAFhF,eAAAZ,MAAA,GAAkB,EAAlB;AAEqH;;AAJhG;AAAA;AAAA,qCAMV;AACT,iBAAKa,OAAL;AACD;AARoB;AAAA;AAAA,kCAUbC,KAVa,EAUL;AAAA;;AACd,iBAAKH,YAAL,CAAkBI,gBAAlB,GAAqCC,SAArC,CAA+C,UAAAC,QAAQ,EAAI;AACzD,mBAAI,CAACjB,MAAL,GAAciB,QAAd;;AACA,kBAAIH,KAAJ,EAAW;AACTA,qBAAK,CAACI,MAAN,CAAaC,QAAb;AACD;AACF,aALD,EAKG,UAAAC,KAAK,EAAI;AACV,kBAAIN,KAAJ,EAAW;AACTA,qBAAK,CAACI,MAAN,CAAaC,QAAb;AACD;;AACD,mBAAI,CAACE,iBAAL;AACD,aAVD;AAWD;AAED;;;;AAxBqB;AAAA;AAAA,8CA2BK;;;;;;;;AACV,6BAAM,KAAKT,eAAL,CAAqBU,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,OADsC;AAE9CC,+BAAO,EAAE,4BAFqC;AAG9CC,+BAAO,EAAE,CAAC,SAAD;AAHqC,uBAA5B,CAAN;;;AAARC,2B;;AAMN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAnCoB;AAAA;AAAA,kCAqCdC,KArCc,EAqCP;AACZ,iBAAK5B,MAAL,CAAY6B,MAAZ,CAAmBD,KAAnB,EAA0B,CAA1B;AACD;AAvCoB;AAAA;AAAA,8BAyCjBJ,OAzCiB,EAyCR;AACXM,mBAAO,CAACC,GAAR,CAAYP,OAAZ;AACD;AA3CoB;;AAAA;AAAA,S;;;;gBAVd;;gBAGA;;gBAFA;;;;AASIf,gBAAU,6DALtB,gEAAU;AACTuB,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8FAFS;;;;AAAA,OAAV,CAKsB,GAAVxB,UAAU,CAAV","file":"routes-routes-module-es5.js","sourcesContent":["export default \"<!-- <ion-split-pane contentId=\\\"main\\\" when=\\\"md\\\">\\n  <ion-menu contentId=\\\"main\\\"> -->\\n    <ion-header translucent=\\\"true\\\">\\n      <ion-toolbar>\\n        <ion-title>Mis Rutas</ion-title>\\n      </ion-toolbar>\\n    </ion-header>\\n\\n    <ion-content fullscreen=\\\"true\\\">\\n      <ion-header collapse=\\\"condense\\\">\\n        <ion-toolbar>\\n          <ion-title size=\\\"large\\\">Mis Rutas</ion-title>\\n        </ion-toolbar>\\n      </ion-header>\\n      <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n        <ion-refresher-content></ion-refresher-content>\\n      </ion-refresher>\\n      <ion-list>\\n        <ion-card *ngFor=\\\"let route of routes; let i = index\\\">\\n          <ion-item-sliding>\\n            <ion-item [routerLink]=\\\"['/tabs/routes', route.id]\\\" routerDirection=\\\"forward\\\">\\n              <ion-icon name=\\\"pin\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-label>{{route.name}}</ion-label>\\n              <ion-label class=\\\"ion-text-right\\\">15m</ion-label>\\n            </ion-item>\\n            <ion-item-options side=\\\"end\\\">\\n              <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(i)\\\">Eliminar</ion-item-option>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n        </ion-card>\\n      </ion-list>\\n    </ion-content>\\n  <!-- </ion-menu>\\n\\n  <ion-router-outlet id=\\\"main\\\"></ion-router-outlet>\\n  \\n</ion-split-pane> -->\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutesPage } from './routes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RoutesPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoutesPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RoutesPage } from './routes.page';\n\nimport { RoutesPageRoutingModule } from './routes-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RoutesPageRoutingModule\n  ],\n  declarations: [RoutesPage]\n})\nexport class RoutesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlcy9yb3V0ZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Route } from 'src/classes/route';\nimport { RouteService } from 'src/services/route.service';\n\n@Component({\n  selector: 'app-routes',\n  templateUrl: 'routes.page.html',\n  styleUrls: ['routes.page.scss']\n})\nexport class RoutesPage implements OnInit {\n\n  routes: Route[] = [];\n\n  constructor(private router: Router, private routeService: RouteService, private alertController: AlertController) { }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  refresh(event?) {\n    this.routeService.getRoutesForUser().subscribe(response => {\n      this.routes = response;\n      if (event) {\n        event.target.complete();\n      }\n    }, error => {\n      if (event) {\n        event.target.complete();\n      }\n      this.presentErrorAlert();\n    });\n  }\n\n  /**\n   * Presenta una alerta de error\n   */\n  async presentErrorAlert() {\n    const alert = await this.alertController.create({\n      header: 'Error',\n      message: 'Hubo al obtener las rutas.',\n      buttons: ['Aceptar']\n    });\n\n    await alert.present();\n  }\n\n  delete(index) {\n    this.routes.splice(index, 1);\n  }\n\n  log(message) {\n    console.log(message);\n  }\n\n}\n"]}