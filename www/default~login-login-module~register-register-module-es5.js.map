{"version":3,"sources":["webpack:///src/app/register/register.page.html","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.page.ts","webpack:///src/services/user.service.ts"],"names":["RegisterPage","modalController","loadingController","alertController","userService","router","validationMessages","name","email","password","validPassword","phone","documentId","birthday","registerForm","required","dismiss","create","message","loadingView","present","header","buttons","alert","clearValidationMessages","validateFields","valid","presentLoading","user","full_name","get","value","cedula","createUser","subscribe","response","console","log","dismissLoading","id","saveUser","navigate","error","presentErrorAlert","validateEmailField","validateNameField","validatePasswordField","validateBirthdayField","validateDocumentIdField","validatePhoneField","emailErrors","errors","push","nameErrors","passwordErrors","validPasswordErrors","documentIdErrors","birthdayErrors","phoneErrors","selector","template","UserService","http","post","authInfo","localUser","getUser","params","providedIn"],"mappings":"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","file":"default~login-login-module~register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Crear cuenta</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">Cancelar</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"createAccount()\\\">\\n    <!-- Name Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nombre y Apellido<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.name\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Document ID Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Cédula<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-input type=\\\"number\\\" formControlName=\\\"documentId\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.documentId\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Birthday Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Fecha de Nacimiento<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-datetime displayFormat=\\\"MMM DD, YYYY\\\" formControlName=\\\"birthday\\\" required></ion-datetime>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.birthday\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Phone Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Número telefónico<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-input type=\\\"tel\\\" formControlName=\\\"phone\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.phone\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Email Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Correo electrónico<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.email\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Password Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Contraseña<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.password\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Password Validation Field -->\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Comprobar Contraseña<ion-text color=\\\"danger\\\">*</ion-text>\\n      </ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"validPassword\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of validationMessages.validPassword\\\">\\n      <div class=\\\"error\\\">\\n        <ion-icon name=\\\"alert\\\" color=\\\"danger\\\"></ion-icon>\\n        <ion-text color=\\\"danger\\\">{{ error }}</ion-text>\\n      </div>\\n    </div>\\n\\n    <!-- Create Account Button -->\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Crear cuenta\\n      </ion-button>\\n    </div>\\n  </form>\\n</ion-content>\";","export default \"ion-button {\\n  margin: 20px 10px;\\n}\\n\\nform .error {\\n  margin: 10px;\\n}\\n\\nform .error ion-icon {\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7QUFDSjs7QUFHSTtFQUNJLFlBQUE7QUFBUjs7QUFFUTtFQUNJLGtCQUFBO0FBQVoiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tYnV0dG9uIHtcbiAgICBtYXJnaW46IDIwcHggMTBweDtcbn1cblxuZm9ybSB7XG4gICAgLmVycm9yIHtcbiAgICAgICAgbWFyZ2luOiAxMHB4O1xuXG4gICAgICAgIGlvbi1pY29uIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\";","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController, ModalController } from '@ionic/angular';\nimport { AuthGuard } from 'src/resources/auth-guard';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n\n  private loadingView;\n  public validationMessages = {\n    name: [],\n    email: [],\n    password: [],\n    validPassword: [],\n    phone: [],\n    documentId: [],\n    birthday: []\n  };\n  public registerForm: FormGroup = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    validPassword: new FormControl('', [Validators.required]),\n    phone: new FormControl('', [Validators.required]),\n    documentId: new FormControl('', [Validators.required]),\n    birthday: new FormControl('', [Validators.required])\n  });\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private alertController: AlertController,\n    private userService: UserService,\n    private router: Router) { }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * Presenta una vista de carga mientras se envian los datos al servidor.\n   */\n  private async presentLoading() {\n    this.loadingView = await this.loadingController.create({\n      message: 'Creando cuenta'\n    });\n    await this.loadingView.present();\n  }\n\n  private async dismissLoading() {\n    await this.loadingView.dismiss();\n  }\n\n  /**\n   * Presenta una alerta de error\n   */\n  async presentErrorAlert() {\n    const alert = await this.alertController.create({\n      header: 'Error',\n      message: 'Hubo un error al crear el usuario.',\n      buttons: ['Aceptar']\n    });\n\n    await alert.present();\n  }\n\n  /**\n   * Se validan los campos y se envian los datos al servidor para ser creado el usuario.\n   */\n  createAccount() {\n    this.clearValidationMessages();\n    this.validateFields();\n    if (this.registerForm.valid) {\n      this.presentLoading();\n      const user = {\n        full_name: this.registerForm.get('name').value,\n        email: this.registerForm.get('email').value,\n        cedula: this.registerForm.get('documentId').value,\n        phone: this.registerForm.get('phone').value,\n        password: this.registerForm.get('password').value\n      };\n      this.userService.createUser(user).subscribe(response => {\n        console.log(response);\n        this.dismissLoading();\n        this.dismiss();\n        const user = {\n          id: response.id,\n          email: response.email\n        };\n        AuthGuard.saveUser(user);\n        this.router.navigate(['/tabs']);\n      }, error => {\n        console.log(error);\n        this.dismissLoading();\n        this.presentErrorAlert();\n      });\n    }\n  }\n\n  /**\n   * Limpia los mensajes de error.\n   */\n  private clearValidationMessages() {\n    this.validationMessages.name = [];\n    this.validationMessages.email = [];\n    this.validationMessages.password = [];\n    this.validationMessages.validPassword = [];\n    this.validationMessages.phone = [];\n    this.validationMessages.documentId = [];\n    this.validationMessages.birthday = [];\n  }\n\n  /**\n   * Valida que los campos tengan información válida.\n   */\n  private validateFields() {\n    this.validateEmailField();\n    this.validateNameField();\n    this.validatePasswordField();\n    this.validateBirthdayField();\n    this.validateDocumentIdField();\n    this.validatePhoneField();\n  }\n\n  /**\n   * Valida la información que contiene el campo de email.\n   */\n  private validateEmailField() {\n    const emailErrors = this.registerForm.get('email').errors;\n    if (emailErrors) {\n      if (emailErrors.required) {\n        this.validationMessages.email.push('El correo electrónico es obligatorio.');\n      }\n      if (emailErrors.email) {\n        this.validationMessages.email.push('El formato del correo electrónico no es válido.');\n      }\n    }\n  }\n\n  /**\n   * Valida la información que contiene el campo de nombre.\n   */\n  private validateNameField() {\n    const nameErrors = this.registerForm.get('name').errors;\n    if (nameErrors) {\n      if (nameErrors.required) {\n        this.validationMessages.name.push('El nombre es obligatorio.');\n      }\n    }\n  }\n\n  /**\n   * Valida la información que contiene el campo de contraseña.\n   */\n  private validatePasswordField() {\n    const passwordErrors = this.registerForm.get('password').errors;\n    const validPasswordErrors = this.registerForm.get('validPassword').errors;\n\n    if (!passwordErrors && !validPasswordErrors) {\n      if (this.registerForm.get('password').value !== this.registerForm.get('validPassword').value) {\n        this.validationMessages.password.push('Las contraseñas no coinciden');\n        this.validationMessages.validPassword.push('Las contraseñas no coinciden');\n      }\n    }\n    if (passwordErrors) {\n      if (passwordErrors.required) {\n        this.validationMessages.password.push('La contraseña es obligatorio.');\n      }\n    }\n    if (validPasswordErrors) {\n      if (validPasswordErrors.required) {\n        this.validationMessages.validPassword.push('La comprobación de la contraseña es obligatorio.');\n      }\n    }\n  }\n\n  /**\n   * Valida la información que contiene el campo de cédula.\n   */\n  private validateDocumentIdField() {\n    const documentIdErrors = this.registerForm.get('documentId').errors;\n    if (documentIdErrors) {\n      if (documentIdErrors.required) {\n        this.validationMessages.documentId.push('La cédula es obligatorio.');\n      }\n    }\n  }\n\n  /**\n   * Valida la información que contiene el campo de fecha de nacimiento.\n   */\n  private validateBirthdayField() {\n    const birthdayErrors = this.registerForm.get('birthday').errors;\n    if (birthdayErrors) {\n      if (birthdayErrors.required) {\n        this.validationMessages.birthday.push('La fecha de nacimiento es obligatorio.');\n      }\n    }\n  }\n\n  /**\n   * Valida la información que contiene el campo de número de teléfono.\n   */\n  private validatePhoneField() {\n    const phoneErrors = this.registerForm.get('phone').errors;\n    if (phoneErrors) {\n      if (phoneErrors.required) {\n        this.validationMessages.phone.push('El número telefónico es obligatorio.');\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthGuard } from 'src/resources/auth-guard';\nimport { User } from 'src/classes/user';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public createUser(user) {\n    return this.http.post<User>('https://community-service-ucab.herokuapp.com/api/users', user);\n  }\n\n  public login(authInfo) {\n    return this.http.post<User>('https://community-service-ucab.herokuapp.com/api/login', authInfo);\n  }\n\n  public getSignedInUser() {\n    const localUser = AuthGuard.getUser();\n    const params = { email: localUser.email };\n    if (localUser !== null) {\n      return this.http.get<User>('https://community-service-ucab.herokuapp.com/api/user', { params });\n    }\n  }\n\n  public getUserByEmail(email) {\n    const params = { email };\n    return this.http.get<User>('https://community-service-ucab.herokuapp.com/api/user', { params });\n  }\n}\n"]}